openapi: 3.0.1
info:
  title: WEB CHATS API
  description: This is a WEB CHATS API
  contact:
    email: deltabd33@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://127.0.0.1:5000/
paths:
  
  /register:
    post:
      summary: register a new user
      description: Register and add to system new user
      operationId: registerUser
      requestBody:
        description: User info that needs to register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: "User registered correctly"
        400:
          description: "Bad request: User with this login already exists or other error"
      x-codegen-request-body-name: body
  
  /login:
    post:
      summary: login user
      description: login user in webchat
      operationId: loginUser
      requestBody:
        description: User info that needs to login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: User was correctly login
          headers:
            x-auth-key:
              description: Auth key of current user session
              schema:
                $ref: '#/components/securitySchemes/SessionKey'
          content: {}
        400:
          description: "Bad request: User with this login is not exist"
        401:
          description: "Unauthorized: Incorrect password"
        500:
          description: "Internal Server Error"
  
  /chats:
    get:
      summary: get all chats
      description: get all created chats in system
      operationId: getChats
      responses:
        200:
          description: Chats that user takes from appliation
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ChatArray'
        401:
          description: "Unauthorized: Invalid api key"
      security:
      - SessionKey: []
    post:
      summary: create new chat
      description: create a new chat with chatName
      operationId: createNewChat
      requestBody:
        description: Data that needs to create new chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatPOST'
        required: true
      responses:
        200:
          description: "Chat was created correctly"
        401:
          description: "Unauthorized: Invalid api key"
        500:
          description: "Internal Server Error"
      security:
      - SessionKey: [] 
  
  /chats/{chat_id}:
    get:
      summary: get messages in chat with chat_id
      description: get a count of messages in chat with chat_id before or after a message_id If count>0 takes messages after messages with message_id. Else takes messages before messages with message_id. If query parameters are empty then takes last 100 messages in chat.
      operationId: getMessagesInChat
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: integer
            minimum: 1
        - in: query
          name: count
          required: false
          schema:
            type: integer
            minimum: 1
        - in: query
          name: message_id
          required: false
          schema:
            type: integer
            minimum: 1
      responses:
        200:
          content:
            description: Messages that user takes from chat_id
            application/json:
              schema:
                $ref: '#/components/schemas/MessageArray'
        400:
          description: "Bad Request: Message with this message_id is not exist"
        401:
          description: "Unauthorized: Invalid api key"
      security:
      - SessionKey: [] 
    post:
      summary: send message in chat with chat_id
      description: send message in concrete chat
      operationId: sendMessageInChat
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        description: Message that user send to chat with id chatId
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagePOST'
        required: true
      responses:
        200:
          description: "Message was send correctly"
        401:
          description: "Unauthorized: Invalid api key"
        500:
          description: "Internal Server Error"
      security:
      - SessionKey: []

    
components:
  schemas:
  
    User:
      type: object
      properties:
        login:
          type: string
          example: SomeUser123
        password:
          type: string
          example: MyAweSomePassWd213
          
    ChatArray:
      type: array
      items:
        $ref: '#/components/schemas/Chat'
      example:
      - chatId: 1
        chatName: SomeChatName1
        creatorName: someUser1
      - chatId: 2
        chatName: SomeChatName2
        creatorName: someUser2
      - chatId: 3
        chatName: SomeChatName13
        creatorName: someUser133

    Chat:
      type: object
      properties:
        chatId:
          type: integer
          example: 1
        chatName:
          type: string
          example: SomeChatName
        creatorName:
          type: string
          example: someUser

    ChatPOST:
      type: object
      properties:
        chatName:
          type: string
          example: SomeChatName

    MessageArray:
      type: array
      items:
        $ref: '#/components/schemas/MessageModel'
      example:
      - messageID: 1
        creatorName: SomeUserLogin1
        timeStamp: 30.01.21 17:21
        messageBody: Hello! How are you?)
      - messageID: 2
        creatorName: SomeUserLogin2
        timeStamp: 30.01.21 17:30
        messageBody: Hi! Im not fine))) And u?)
      - messageID: 3
        creatorName: SomeUserLogin1
        timeStamp: 30.01.21 17:35
        messageBody: Im fine. Why are u so sad?)
      - messageID: 4
        creatorName: SomeUserLogin2
        timeStamp: 30.01.21 17:36
        messageBody: Because I've been doing this lab all day. 
        
    MessageArray2:
      type: array
      items:
        $ref: '#/components/schemas/MessageModel'
      example:
      - messageID: 3
        creatorName: SomeUserLogin1
        timeStamp: 30.01.21 17:35
        messageBody: Im fine. Why are u so sad?)
      - messageID: 4
        creatorName: SomeUserLogin2
        timeStamp: 30.01.21 17:36
        messageBody: Because I've been doing this lab all day.

    MessageModel:
      type: object
      properties:
        messageID:
          type: integer
          example: 25
        userLogin:
          type: string
          example: SomeUserLogin
        timeStamp:
          type: string
          example: 30.01.21 17:21
        messageBody:
          type: string
          example: Hello! How are you?)

    MessagePOST:
      type: object
      properties:
        messageBody:
          type: string
          example: Hello! How are you?)

          
  securitySchemes:
    SessionKey:
      type: apiKey
      name: x-auth-key
      in: header
